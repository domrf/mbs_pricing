# -*- coding: utf8 -*-
import numpy
import pandas
import names
import time
from dateutil.relativedelta import relativedelta

data = pandas.DataFrame([
    # --- VTB-1 historical MBS debt and yields ---
    [u'RU000A0ZYJT2', u'ВТБ-1', '2018-11-01', 28034201996.36, 321709738.97],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2018-12-01', 26837393387.14, 315004331.11],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-01-01', 25531606666.14, 295704426.84],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-02-01', 24799576854.94, 286128192.52],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-03-01', 24040242789.37, 272137731.74],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-04-01', 23250456384.04, 248552485.74],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-05-01', 22592056261.94, 259421954.03],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-06-01', 22012934656.99, 245493626.70],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-07-01', 21406900085.46, 246866050.63],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-08-01', 20722428263.44, 235761878.20],
    [u'RU000A0ZYJT2', u'ВТБ-1', '2019-09-01', 20039195454.21, 232238488.25],
    # --- RFB-1 historical MBS debt and yields ---
    [u'RU000A0ZYL89', u'РФБ-1', '2018-01-01', 7000786962.80, 21181910.04],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-02-01', 6724168326.21, 71204543.76],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-03-01', 6448880674.61, 66683405.49],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-04-01', 6145202574.78, 59259367.21],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-05-01', 5780677264.28, 62438690.78],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-06-01', 5454187866.25, 57186128.99],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-07-01', 5159715681.67, 55410537.71],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-08-01', 4834772601.24, 50111532.21],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-09-01', 4600266625.26, 49076742.12],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-10-01', 4410612378.50, 46550522.30],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-11-01', 4192823288.33, 43224961.60],
    [u'RU000A0ZYL89', u'РФБ-1', '2018-12-01', 3997626372.38, 42867782.34],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-01-01', 3786041436.77, 39311328.89],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-02-01', 3654496508.75, 39610708.62],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-03-01', 3541069221.10, 36038267.82],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-04-01', 3440705341.25, 32517770.18],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-05-01', 3320022495.35, 34917546.14],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-06-01', 3244156457.87, 33005231.80],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-07-01', 3170441407.63, 32548900.55],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-08-01', 3086501604.21, 31216335.65],
    [u'RU000A0ZYL89', u'РФБ-1', '2019-09-01', 3002021134.85, 31351957.78],
],
    columns=[u'ISIN', u'NAM', u'DAT', u'BOP', u'YLD']
)

data1 = pandas.DataFrame([
    # --- VTB-1 historical Pool debt and yields ---
    ['2017-11-01', u'ВТБ-1', 36553, 47757358892.02, 20236744.66, 103914288.39, 582017446.31, 0.00, u'RU000A0ZYJT2'],
    ['2017-12-01', u'ВТБ-1', 36255, 45723118596.42, 383804593.02, 255066378.44, 1779173917.16, 0.00, u'RU000A0ZYJT2'],
    ['2018-01-01', u'ВТБ-1', 35242, 43297425247.21, 504676062.24, 255857162.23, 2169836186.98, 0.00, u'RU000A0ZYJT2'],
    ['2018-02-01', u'ВТБ-1', 33998, 41855323865.89, 486490488.78, 228778447.23, 1213322934.09, 2816801.69, u'RU000A0ZYJT2'],
    ['2018-03-01', u'ВТБ-1', 33276, 40325227425.82, 463196291.86, 221917710.00, 1308178730.07, 3231378.98, u'RU000A0ZYJT2'],
    ['2018-04-01', u'ВТБ-1', 32506, 38743652670.52, 417868724.46, 265549355.72, 1316025399.58, 4813730.70, u'RU000A0ZYJT2'],
    ['2018-05-01', u'ВТБ-1', 31674, 37259570410.96, 397270051.45, 200361176.89, 1283721082.67, 23305007.81, u'RU000A0ZYJT2'],
    ['2018-06-01', u'ВТБ-1', 30879, 35603557430.82, 447693076.59, 274616404.59, 1381396575.55, 8797136.25, u'RU000A0ZYJT2'],
    ['2018-07-01', u'ВТБ-1', 29949, 33961214455.60, 399151907.09, 207493749.45, 1434849225.77, 13969688.26, u'RU000A0ZYJT2'],
    ['2018-08-01', u'ВТБ-1', 28980, 32430275009.39, 369977368.69, 224188236.23, 1306751209.98, 22136071.95, u'RU000A0ZYJT2'],
    ['2018-09-01', u'ВТБ-1', 28076, 30843607574.13, 366397617.87, 234125064.46, 1352542370.80, 18561309.90, u'RU000A0ZYJT2'],
    ['2018-10-01', u'ВТБ-1', 27132, 29449093916.13, 344600430.73, 201804791.00, 1192708867.00, 18641030.72, u'RU000A0ZYJT2'],
    ['2018-11-01', u'ВТБ-1', 26283, 28047832939.42, 321709738.97, 217554622.89, 1183706353.82, 21463485.84, u'RU000A0ZYJT2'],
    ['2018-12-01', u'ВТБ-1', 25405, 26848013319.49, 315004331.11, 226652817.10, 973166802.83, 33984131.07, u'RU000A0ZYJT2'],
    ['2019-01-01', u'ВТБ-1', 24620, 25541785204.34, 295704426.84, 209200632.76, 1097027482.39, 14384748.52, u'RU000A0ZYJT2'],
    ['2019-02-01', u'ВТБ-1', 23730, 24808252801.18, 286128192.52, 210754584.44, 522777818.72, 16782191.22, u'RU000A0ZYJT2'],
    ['2019-03-01', u'ВТБ-1', 23296, 24052088208.23, 272137731.74, 180435589.64, 575729003.31, 21987852.02, u'RU000A0ZYJT2'],
    ['2019-04-01', u'ВТБ-1', 22806, 23258143279.79, 248552485.74, 208269999.58, 585674928.86, 15332252.76, u'RU000A0ZYJT2'],
    ['2019-05-01', u'ВТБ-1', 22289, 22600228741.15, 259421954.03, 189721084.46, 468193454.18, 26093052.73, u'RU000A0ZYJT2'],
    ['2019-06-01', u'ВТБ-1', 21826, 22020222626.06, 245493626.70, 184057887.79, 395948227.30, 34318031.49, u'RU000A0ZYJT2'],
    ['2019-07-01', u'ВТБ-1', 21435, 21417539720.48, 246866050.63, 182410282.86, 420272622.72, 17758341.71, u'RU000A0ZYJT2'],
    ['2019-08-01', u'ВТБ-1', 21005, 20728279936.03, 235761878.20, 197752146.85, 491507637.60, 28377584.60, u'RU000A0ZYJT2'],
    ['2019-09-01', u'ВТБ-1', 20500, 20046009408.91, 232238488.25, 176115629.99, 506154897.13, 30171715.76, u'RU000A0ZYJT2'],
    # --- RFB-1 historical Pool debt and yields ---
    ['2018-01-01', u'РФБ-1', 4180, 7000801091.82, 21181910.04, 27159544.28, 352542126.73, 0.00, u'RU000A0ZYL89'],
    ['2018-02-01', u'РФБ-1', 4063, 6724174251.28, 71204543.76, 28080501.98, 248546338.56, 0.00, u'RU000A0ZYL89'],
    ['2018-03-01', u'РФБ-1', 3957, 6448918170.71, 66683405.49, 29755029.40, 245501051.17, 0.00, u'RU000A0ZYL89'],
    ['2018-04-01', u'РФБ-1', 3853, 6145226788.40, 59259367.21, 34112831.33, 269578550.98, 0.00, u'RU000A0ZYL89'],
    ['2018-05-01', u'РФБ-1', 3728, 5780738368.27, 62438690.78, 27058644.40, 337429775.73, 0.00, u'RU000A0ZYL89'],
    ['2018-06-01', u'РФБ-1', 3581, 5454218462.56, 57186128.99, 27684714.06, 298835191.65, 0.00, u'RU000A0ZYL89'],
    ['2018-07-01', u'РФБ-1', 3451, 5159737152.20, 55410537.71, 24745381.30, 269735929.06, 0.00, u'RU000A0ZYL89'],
    ['2018-08-01', u'РФБ-1', 3323, 4834839014.35, 50111532.21, 26064660.88, 298833476.97, 3432055.49, u'RU000A0ZYL89'],
    ['2018-09-01', u'РФБ-1', 3182, 4600282810.38, 49076742.12, 26936982.82, 207619221.15, 0.00, u'RU000A0ZYL89'],
    ['2018-10-01', u'РФБ-1', 3079, 4410634808.46, 46550522.30, 22713791.99, 166934209.93, 0.00, u'RU000A0ZYL89'],
    ['2018-11-01', u'РФБ-1', 2971, 4192847494.16, 43224961.60, 23285280.81, 194502033.49, 0.00, u'RU000A0ZYL89'],
    ['2018-12-01', u'РФБ-1', 2860, 3997652723.06, 42867782.34, 21004676.93, 174190094.17, 0.00, u'RU000A0ZYL89'],
    ['2019-01-01', u'РФБ-1', 2765, 3786041436.77, 39311328.89, 21625163.07, 189986123.22, 0.00, u'RU000A0ZYL89'],
    ['2019-02-01', u'РФБ-1', 2643, 3654500136.71, 39610708.62, 18605248.03, 112936052.03, 0.00, u'RU000A0ZYL89'],
    ['2019-03-01', u'РФБ-1', 2577, 3541114313.85, 36038267.82, 19955794.32, 93430028.54, 0.00, u'RU000A0ZYL89'],
    ['2019-04-01', u'РФБ-1', 2526, 3440738012.09, 32517770.18, 22502022.02, 77874279.74, 0.00, u'RU000A0ZYL89'],
    ['2019-05-01', u'РФБ-1', 2472, 3320030335.98, 34917546.14, 18255921.85, 102451754.26, 0.00, u'RU000A0ZYL89'],
    ['2019-06-01', u'РФБ-1', 2414, 3244197689.44, 33005231.80, 18635783.45, 57196863.09, 0.00, u'RU000A0ZYL89'],
    ['2019-07-01', u'РФБ-1', 2374, 3170521394.83, 32548900.55, 17875553.61, 55800741.00, 0.00, u'RU000A0ZYL89'],
    ['2019-08-01', u'РФБ-1', 2334, 3086537593.76, 31216335.65, 18595000.54, 65388800.53, 0.00, u'RU000A0ZYL89'],
    ['2019-09-01', u'РФБ-1', 2283, 3002068481.36, 31351957.78, 17281165.18, 67187947.22, 0.00, u'RU000A0ZYL89'],
],
    columns=[u'DAT1', u'NAME', u'NUM', u'DBT', u'YLD', u'PLN', u'ADV', u'PDL', u'ISIN']
)


def histcf(isin):

    df = data.loc[data['ISIN'].values==isin, :].copy(deep=True)
    df.sort_values(by=u'DAT', inplace=True)

    if not df.empty:
        df = pandas.DataFrame([[numpy.nan] * len(df.columns)], columns=df.columns).append(df, ignore_index=True)

        df['YLD'] = df['YLD'].shift(-1)
        df.at[0, 'DAT'] = numpy.datetime64(df['DAT'][1], 'M') - 1
        df['DAT'] = df['DAT'].astype('datetime64[D]')

        df['AMT'] = df['BOP'].diff(-1)
        df = df.set_index('DAT').fillna(0)[:-1]

    else:
        print time.strftime('%Y-%m-%d %H:%M:%S'), 'histcf(...):', 'cannot find history cashflows for isin=', isin

    del df[u'ISIN']
    del df[u'NAM']

    return df

def sql_pool_flows(isin):

    df = data1.loc[data1[u'ISIN'] == isin, :].copy(deep=True)

    df[u'DAT'] = pandas.to_datetime(df[u'DAT1'])
    df.sort_values(by=[u'NAME', u'DAT'], inplace=True)
    del df['DAT1']
    del df['NAME']

    df['DAT'] = pandas.to_datetime(df['DAT'], format='%Y-%m-%d').dt.date
    # df['DAT'] = [numpy.datetime64(d) for d in df['DAT'].values]
    df = pandas.DataFrame([[numpy.nan] * len(df.columns)], columns=df.columns).append(df, ignore_index=True)

    df[['YLD', 'PLN', 'ADV', 'PDL']] = df[['YLD', 'PLN', 'ADV', 'PDL']].shift(-1)
    df.at[0, 'DAT'] = df['DAT'][1] - relativedelta(months=1)

    df['AMT'] = df['DBT'].diff(-1)
    df.at[0, 'AMT'] = df['PLN'][0] + df['ADV'][0]
    df.at[0, 'DBT'] = df['AMT'][0] + df['DBT'][1]

    df['PRT'] = numpy.nan
    df['FLL'] = numpy.nan

    # Do not deduct PLN from DBT because PLN are volatile! Same formulas are applied to modeled pool flows.
    df['CPR'] = 1 - (1 - ((df['ADV'] - df['PDL']) / df['DBT'])) ** 12
    df['CDR'] = 1 - (1 - (df['PDL'] / df['DBT'])) ** 12

    df = df[['DAT', 'NUM', 'DBT', 'YLD', 'AMT', 'ADV', 'PLN', 'PRT', 'FLL', 'PDL', 'CPR', 'CDR']]

    df.columns = [names.CFN.DAT, names.CFN.NUM, names.CFN.DBT, names.CFN.YLD,
                  names.CFN.AMT, names.CFN.ADV, names.CFN.PLN, names.CFN.PRT,
                  names.CFN.FLL, names.CFN.PDL, names.CFN.CPR, names.CFN.CDR]

    df.set_index(df[names.CFN.DAT], inplace=True)

    df[names.CFN.NUM] /= 1000
    df[[names.CFN.DBT, names.CFN.AMT, names.CFN.ADV, names.CFN.YLD,
        names.CFN.PLN, names.CFN.PRT, names.CFN.FLL, names.CFN.PDL]] /= 1000000000

    return df
