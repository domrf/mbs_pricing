# -*- coding: utf8 -*-
import pandas

PartChange = 0.8

# ====== INTERCEPT ======
Default = 0.000365
Prepayment = 0.012903
Partial = 0.053804
PartSize = 0.104277

const_adjusts = {}
time_adjusts = {}
comb_adjusts = {}

# ====== BASELINE ======
base = pandas.DataFrame([
    [0.00, 0.012824, 0.104648, 3.954876, 1.714676, ],
    [0.17, 0.099989, 0.303290, 3.172702, 1.698244, ],
    [0.33, 0.211005, 0.446585, 2.545222, 1.253044, ],
    [0.50, 0.363018, 0.591550, 2.041842, 1.034656, ],
    [0.67, 0.449501, 0.660806, 1.771524, 0.928642, ],
    [0.83, 0.541263, 0.727569, 1.678868, 0.873671, ],
    [1.00, 0.636131, 0.791069, 1.617220, 0.844090, ],
    [1.17, 0.732019, 0.850759, 1.557834, 0.827836, ],
    [1.33, 0.827049, 0.906299, 1.500628, 0.818800, ],
    [1.50, 0.919635, 0.957522, 1.445522, 0.813743, ],
    [1.67, 1.008507, 1.004399, 1.392443, 0.810903, ],
    [1.83, 1.092720, 1.047013, 1.341310, 0.809303, ],
    [2.00, 1.171624, 1.085526, 1.292055, 0.808402, ],
    [2.17, 1.244834, 1.120157, 1.244611, 0.808402, ],
    [2.33, 1.312189, 1.151161, 1.198907, 0.808402, ],
    [2.50, 1.373699, 1.178810, 1.154882, 0.808402, ],
    [2.67, 1.429511, 1.203387, 1.112473, 0.808402, ],
    [2.83, 1.479871, 1.225168, 1.071623, 0.808402, ],
    [3.00, 1.525091, 1.244425, 1.032271, 0.808402, ],
    [3.17, 1.565525, 1.261411, 0.994365, 0.808402, ],
    [3.33, 1.601546, 1.276366, 0.957852, 0.808402, ],
    [3.50, 1.633535, 1.289512, 0.922678, 0.808402, ],
    [3.67, 1.661862, 1.301050, 0.888796, 0.808402, ],
    [3.83, 1.686889, 1.311165, 0.856159, 0.808402, ],
    [4.00, 1.708951, 1.320022, 0.824720, 0.808402, ],
    [4.17, 1.728366, 1.327771, 0.794435, 0.808402, ],
    [4.33, 1.745423, 1.334544, 0.765262, 0.808402, ],
    [4.50, 1.760391, 1.340461, 0.737162, 0.808402, ],
    [4.67, 1.773505, 1.345626, 0.710092, 0.808402, ],
    [4.83, 1.784986, 1.350132, 0.684016, 0.808402, ],
    [5.00, 1.795027, 1.354062, 0.658899, 0.808402, ],
    [5.17, 1.803803, 1.357487, 0.634704, 0.808402, ],
    [5.33, 1.811466, 1.360472, 0.611396, 0.808402, ],
    [5.50, 1.818154, 1.363073, 0.588945, 0.808402, ],
    [5.67, 1.823991, 1.365338, 0.567319, 0.808402, ],
    [5.83, 1.829079, 1.367310, 0.546486, 0.808402, ],
    [6.00, 1.833515, 1.369027, 0.526418, 0.808402, ],
    [6.17, 1.837378, 1.370521, 0.507088, 0.808402, ],
    [6.33, 1.840743, 1.371821, 0.488467, 0.808402, ],
    [6.50, 1.843676, 1.372953, 0.470530, 0.808402, ],
    [6.67, 1.846227, 1.373937, 0.453252, 0.808402, ],
    [6.83, 1.848448, 1.374793, 0.436608, 0.808402, ],
    [7.00, 1.850382, 1.375538, 0.420575, 0.808402, ],
    [7.17, 1.852066, 1.376187, 0.405131, 0.808402, ],
    [7.33, 1.853529, 1.376750, 0.390255, 0.808402, ],
    [7.50, 1.854802, 1.377240, 0.375924, 0.808402, ],
    [7.67, 1.855911, 1.377666, 0.362120, 0.808402, ],
    [7.83, 1.856875, 1.378037, 0.348822, 0.808402, ],
    [8.00, 1.857714, 1.378359, 0.336013, 0.808402, ],
    [8.17, 1.858442, 1.378639, 0.323674, 0.808402, ],
    [8.33, 1.859076, 1.378883, 0.311789, 0.808402, ],
    [8.50, 1.859627, 1.379095, 0.300340, 0.808402, ],
    [8.67, 1.860108, 1.379280, 0.289311, 0.808402, ],
    [8.83, 1.860525, 1.379440, 0.278687, 0.808402, ],
    [9.00, 1.860887, 1.379578, 0.268453, 0.808402, ],
    [9.17, 1.861202, 1.379699, 0.258595, 0.808402, ],
    [9.33, 1.861477, 1.379805, 0.249099, 0.808402, ],
    [9.50, 1.861716, 1.379897, 0.239952, 0.808402, ],
    [9.67, 1.861922, 1.379976, 0.231141, 0.808402, ],
    [9.83, 1.862103, 1.380046, 0.222653, 0.808402, ],
    [10.00, 1.862258, 1.380105, 0.214477, 0.808402, ],
], columns=[u'Period', u'Default', u'Prepayment', u'Partial', u'PartSize', ])

# ====== LTV ======
const_adjusts[u'Кредит/Залог'] = pandas.DataFrame([
    [0.00, 0.830891, 1.386354, 1.197304, ],
    [2.00, 0.830891, 1.386354, 1.197304, ],
    [4.00, 0.830891, 1.386354, 1.197304, ],
    [6.00, 0.830891, 1.386354, 1.197304, ],
    [8.00, 0.830891, 1.386354, 1.197304, ],
    [10.00, 0.830891, 1.386354, 1.197304, ],
    [12.00, 0.830891, 1.386354, 1.197304, ],
    [14.00, 0.830891, 1.386354, 1.197304, ],
    [16.00, 0.830891, 1.386354, 1.197304, ],
    [18.00, 0.830891, 1.386354, 1.197304, ],
    [20.00, 0.830891, 1.386354, 1.197304, ],
    [22.00, 0.830891, 1.386354, 1.044809, ],
    [24.00, 0.830891, 1.386354, 1.044809, ],
    [26.00, 0.830891, 1.386354, 1.044809, ],
    [28.00, 0.830891, 1.194444, 1.044809, ],
    [30.00, 0.830891, 1.194444, 1.044809, ],
    [32.00, 0.830891, 1.194444, 1.044809, ],
    [34.00, 0.830891, 1.194444, 1.044809, ],
    [36.00, 0.830891, 1.194444, 1.044809, ],
    [38.00, 0.830891, 1.194444, 1.044809, ],
    [40.00, 0.830891, 1.194444, 1.044809, ],
    [42.00, 0.830891, 1.194444, 1.044809, ],
    [44.00, 0.830891, 1.034172, 1.044809, ],
    [46.00, 1.002049, 1.034172, 1.044809, ],
    [48.00, 1.002049, 1.034172, 1.044809, ],
    [50.00, 1.002049, 1.034172, 1.044809, ],
    [52.00, 1.002049, 1.034172, 1.044809, ],
    [54.00, 1.002049, 1.034172, 1.044809, ],
    [56.00, 1.002049, 1.034172, 1.044809, ],
    [58.00, 1.002049, 1.034172, 1.044809, ],
    [60.00, 1.002049, 1.034172, 1.044809, ],
    [62.00, 1.002049, 1.034172, 1.044809, ],
    [64.00, 1.002049, 1.034172, 1.044809, ],
    [66.00, 1.002049, 1.034172, 1.044809, ],
    [68.00, 1.002049, 1.034172, 1.044809, ],
    [70.00, 1.002049, 0.895173, 1.044809, ],
    [72.00, 1.002049, 0.895173, 1.044809, ],
    [74.00, 1.002049, 0.895173, 0.977353, ],
    [76.00, 1.002049, 0.895173, 0.977353, ],
    [78.00, 1.002049, 0.895173, 0.977353, ],
    [80.00, 1.158226, 0.784629, 0.843977, ],
    [82.00, 1.158226, 0.784629, 0.843977, ],
    [84.00, 1.158226, 0.784629, 0.843977, ],
    [86.00, 1.307176, 0.784629, 0.843977, ],
    [88.00, 1.307176, 0.784629, 0.843977, ],
    [90.00, 1.519806, 0.784629, 0.843977, ],
    [92.00, 1.519806, 0.784629, 0.843977, ],
    [94.00, 1.519806, 0.784629, 0.843977, ],
    [96.00, 1.519806, 0.784629, 0.843977, ],
    [98.00, 1.519806, 0.784629, 0.843977, ],
    [100.00, 1.519806, 0.784629, 0.843977, ],
], columns=[u'Value', u'Default', u'Prepayment', u'Partial', ])

# ====== REGION ======
const_adjusts[u'Регион'] = pandas.DataFrame([
    [1.00, 1.237085, 1.024046, ],
    [2.00, 0.928340, 0.901734, ],
    [3.00, 1.427400, 0.584535, ],
    [4.00, 0.750572, 0.584535, ],
    [5.00, 0.750572, 0.584535, ],
    [6.00, 0.750572, 0.584535, ],
    [7.00, 1.427400, 0.584535, ],
    [8.00, 0.591633, 1.610763, ],
    [9.00, 0.591633, 0.584535, ],
    [10.00, 0.591633, 0.901734, ],
    [11.00, 0.750572, 0.901734, ],
    [12.00, 0.750572, 1.248151, ],
    [13.00, 0.750572, 0.901734, ],
    [14.00, 0.928340, 0.901734, ],
    [15.00, 1.427400, 0.584535, ],
    [16.00, 1.049579, 0.901734, ],
    [17.00, 1.427400, 1.610763, ],
    [18.00, 0.928340, 0.901734, ],
    [19.00, 1.427400, 0.750983, ],
    [20.00, 1.427400, 0.750983, ],
    [21.00, 1.049579, 1.248151, ],
    [22.00, 1.237085, 0.584535, ],
    [23.00, 1.237085, 0.901734, ],
    [24.00, 1.237085, 0.901734, ],
    [25.00, 1.049579, 1.024046, ],
    [26.00, 1.237085, 0.584535, ],
    [27.00, 1.237085, 1.024046, ],
    [28.00, 0.928340, 1.024046, ],
    [29.00, 0.928340, 1.024046, ],
    [30.00, 1.427400, 0.584535, ],
    [31.00, 1.237085, 1.248151, ],
    [32.00, 1.049579, 0.901734, ],
    [33.00, 0.591633, 0.901734, ],
    [34.00, 0.928340, 0.750983, ],
    [35.00, 1.049579, 1.024046, ],
    [36.00, 1.237085, 1.248151, ],
    [37.00, 1.049579, 0.750983, ],
    [38.00, 0.928340, 0.901734, ],
    [39.00, 0.591633, 1.024046, ],
    [40.00, 0.928340, 0.901734, ],
    [41.00, 1.049579, 0.901734, ],
    [42.00, 1.237085, 0.901734, ],
    [43.00, 1.049579, 0.750983, ],
    [44.00, 0.928340, 1.024046, ],
    [45.00, 0.928340, 0.584535, ],
    [46.00, 0.928340, 1.248151, ],
    [47.00, 0.750572, 1.610763, ],
    [48.00, 1.049579, 0.901734, ],
    [49.00, 0.750572, 0.901734, ],
    [50.00, 0.750572, 1.610763, ],
    [51.00, 0.928340, 0.750983, ],
    [52.00, 0.928340, 1.024046, ],
    [53.00, 1.049579, 1.248151, ],
    [54.00, 1.427400, 0.901734, ],
    [55.00, 0.750572, 0.901734, ],
    [56.00, 1.237085, 0.584535, ],
    [57.00, 0.591633, 1.024046, ],
    [58.00, 0.591633, 1.024046, ],
    [59.00, 0.928340, 0.750983, ],
    [60.00, 0.591633, 1.024046, ],
    [61.00, 0.928340, 0.901734, ],
    [62.00, 0.928340, 0.901734, ],
    [63.00, 1.427400, 0.901734, ],
    [64.00, 1.049579, 0.750983, ],
    [65.00, 0.750572, 1.024046, ],
    [66.00, 0.928340, 1.024046, ],
    [67.00, 0.928340, 1.248151, ],
    [68.00, 0.591633, 0.901734, ],
    [69.00, 1.049579, 1.248151, ],
    [70.00, 0.928340, 1.024046, ],
    [71.00, 0.928340, 0.901734, ],
    [72.00, 1.049579, 0.901734, ],
    [73.00, 1.049579, 0.901734, ],
    [74.00, 1.049579, 1.024046, ],
    [75.00, 1.049579, 0.750983, ],
    [76.00, 1.237085, 1.024046, ],
    [77.00, 0.591633, 1.248151, ],
    [78.00, 0.750572, 1.248151, ],
    [79.00, 0.591633, 0.750983, ],
    [80.00, 0.591633, 0.750983, ],
    [81.00, 0.591633, 0.750983, ],
    [82.00, 0.591633, 0.750983, ],
    [83.00, 0.591633, 1.248151, ],
    [84.00, 0.591633, 1.248151, ],
    [85.00, 0.591633, 1.248151, ],
    [86.00, 0.928340, 0.901734, ],
    [87.00, 0.591633, 1.610763, ],
    [88.00, 0.591633, 0.584535, ],
    [89.00, 1.237085, 0.901734, ],
    [90.00, 1.237085, 0.901734, ],
    [91.00, 1.237085, 0.901734, ],
    [92.00, 1.237085, 0.901734, ],
    [93.00, 1.237085, 0.901734, ],
    [94.00, 1.237085, 0.901734, ],
    [95.00, 1.237085, 0.901734, ],
    [96.00, 1.237085, 0.901734, ],
    [97.00, 1.237085, 0.901734, ],
    [98.00, 1.237085, 0.901734, ],
    [99.00, 0.591633, 1.610763, ],
], columns=[u'Value', u'Default', u'Partial', ])

# ====== MIR_CIR_0 ======
const_adjusts[u'Спрэд при выдаче'] = pandas.DataFrame([
    [-5.00, 1.849312, ],
    [-4.80, 1.849312, ],
    [-4.60, 1.849312, ],
    [-4.40, 1.849312, ],
    [-4.20, 1.849312, ],
    [-4.00, 1.849312, ],
    [-3.80, 1.849312, ],
    [-3.60, 1.849312, ],
    [-3.40, 1.849312, ],
    [-3.20, 1.849312, ],
    [-3.00, 1.849312, ],
    [-2.80, 1.849312, ],
    [-2.60, 1.849312, ],
    [-2.40, 1.849312, ],
    [-2.20, 1.849312, ],
    [-2.00, 1.849312, ],
    [-1.80, 1.849312, ],
    [-1.60, 1.849312, ],
    [-1.40, 1.356066, ],
    [-1.20, 1.356066, ],
    [-1.00, 1.356066, ],
    [-0.80, 1.356066, ],
    [-0.60, 0.997273, ],
    [-0.40, 0.997273, ],
    [-0.20, 0.997273, ],
    [0.00, 0.997273, ],
    [0.20, 0.693846, ],
    [0.40, 0.693846, ],
    [0.60, 0.693846, ],
    [0.80, 0.693846, ],
    [1.00, 0.693846, ],
    [1.20, 0.693846, ],
    [1.40, 0.693846, ],
    [1.60, 0.693846, ],
    [1.80, 0.693846, ],
    [2.00, 0.693846, ],
    [2.20, 0.693846, ],
    [2.40, 0.693846, ],
    [2.60, 0.693846, ],
    [2.80, 0.693846, ],
    [3.00, 0.693846, ],
    [3.20, 0.367534, ],
    [3.40, 0.367534, ],
    [3.60, 0.367534, ],
    [3.80, 0.367534, ],
    [4.00, 0.367534, ],
], columns=[u'Value', u'Default', ])

# ====== INCOME_TO_AMOUNT ======
const_adjusts[u'Доход/Кредит'] = pandas.DataFrame([
    [0.00, 0.855994, 0.911435, ],
    [0.01, 0.855994, 0.911435, ],
    [0.01, 0.855994, 0.911435, ],
    [0.02, 0.855994, 0.911435, ],
    [0.02, 0.855994, 0.911435, ],
    [0.02, 0.855994, 0.911435, ],
    [0.03, 0.855994, 0.911435, ],
    [0.04, 0.996891, 0.996984, ],
    [0.04, 0.996891, 0.996984, ],
    [0.04, 0.996891, 1.106566, ],
    [0.04, 1.188072, 1.106566, ],
    [0.05, 1.188072, 1.106566, ],
    [0.05, 1.188072, 1.106566, ],
    [0.05, 1.188072, 1.106566, ],
    [0.06, 1.188072, 1.106566, ],
    [0.06, 1.188072, 1.106566, ],
    [0.06, 1.542739, 1.217942, ],
    [0.06, 1.542739, 1.217942, ],
    [0.07, 1.542739, 1.217942, ],
    [0.07, 1.542739, 1.217942, ],
    [0.07, 1.542739, 1.217942, ],
    [0.07, 1.542739, 1.217942, ],
    [0.07, 1.542739, 1.217942, ],
    [0.08, 1.542739, 1.373309, ],
    [0.08, 1.542739, 1.373309, ],
    [0.09, 1.542739, 1.373309, ],
    [0.09, 1.542739, 1.373309, ],
    [0.10, 1.542739, 1.373309, ],
    [0.10, 1.542739, 1.373309, ],
], columns=[u'Value', u'Prepayment', u'PartSize', ])

# ====== EDUCATION ======
const_adjusts[u'Образование'] = pandas.DataFrame([
    [0.00, 1.477556, 0.724918, 0.698226, 1.147059, ],
    [1.00, 1.477556, 0.724918, 0.698226, 1.147059, ],
    [2.00, 1.477556, 0.724918, 1.121662, 0.962876, ],
    [3.00, 0.765112, 1.122836, 1.121662, 0.962876, ],
    [4.00, 0.765112, 1.122836, 1.121662, 0.962876, ],
    [5.00, 0.765112, 1.122836, 1.121662, 0.962876, ],
    [6.00, 0.765112, 1.122836, 1.121662, 0.962876, ],
    [7.00, 0.765112, 1.122836, 1.121662, 0.962876, ],
    [8.00, 1.000000, 1.000000, 1.000000, 1.000000, ],
], columns=[u'Value', u'Default', u'Prepayment', u'Partial', u'PartSize', ])

# ====== OFZ_6MON ======
comb_adjusts[u'Сценарная ставка с лагом 6 мес.'] = pandas.DataFrame([
    [0.00, 0.567101, 1.235232, ],
    [0.20, 0.568307, 1.234972, ],
    [0.40, 0.569605, 1.234694, ],
    [0.60, 0.571004, 1.234396, ],
    [0.80, 0.572517, 1.234075, ],
    [1.00, 0.574159, 1.233728, ],
    [1.20, 0.575945, 1.233353, ],
    [1.40, 0.577897, 1.232946, ],
    [1.60, 0.580037, 1.232502, ],
    [1.80, 0.582394, 1.232016, ],
    [2.00, 0.585000, 1.231483, ],
    [2.20, 0.587898, 1.230894, ],
    [2.40, 0.591135, 1.230241, ],
    [2.60, 0.594775, 1.229513, ],
    [2.80, 0.598892, 1.228695, ],
    [3.00, 0.603583, 1.227772, ],
    [3.20, 0.608969, 1.226720, ],
    [3.40, 0.615204, 1.225512, ],
    [3.60, 0.622487, 1.224111, ],
    [3.80, 0.631077, 1.222466, ],
    [4.00, 0.641309, 1.220510, ],
    [4.20, 0.653617, 1.218148, ],
    [4.40, 0.668548, 1.215243, ],
    [4.60, 0.686759, 1.211592, ],
    [4.80, 0.708957, 1.206884, ],
    [5.00, 0.735698, 1.200622, ],
    [5.20, 0.767005, 1.191987, ],
    [5.40, 0.801876, 1.179608, ],
    [5.60, 0.838119, 1.161308, ],
    [5.80, 0.872989, 1.134569, ],
    [6.00, 0.904297, 1.100000, ],
    [6.20, 0.931039, 1.065431, ],
    [6.40, 0.953237, 1.038692, ],
    [6.60, 0.971450, 1.020392, ],
    [6.80, 0.986381, 1.008013, ],
    [7.00, 0.998689, 0.999378, ],
    [7.20, 1.008921, 0.993116, ],
    [7.40, 1.017512, 0.988408, ],
    [7.60, 1.024795, 0.984757, ],
    [7.80, 1.031030, 0.981852, ],
    [8.00, 1.036416, 0.979490, ],
    [8.20, 1.041107, 0.977534, ],
    [8.40, 1.045225, 0.975889, ],
    [8.60, 1.048864, 0.974488, ],
    [8.80, 1.052102, 0.973280, ],
    [9.00, 1.054999, 0.972228, ],
    [9.20, 1.057606, 0.971305, ],
    [9.40, 1.059962, 0.970487, ],
    [9.60, 1.062103, 0.969759, ],
    [9.80, 1.064054, 0.969106, ],
    [10.00, 1.065841, 0.968517, ],
    [10.20, 1.067483, 0.967984, ],
    [10.40, 1.068996, 0.967498, ],
    [10.60, 1.070395, 0.967054, ],
    [10.80, 1.071693, 0.966647, ],
    [11.00, 1.072899, 0.966272, ],
    [11.20, 1.074023, 0.965925, ],
    [11.40, 1.075073, 0.965604, ],
    [11.60, 1.076056, 0.965306, ],
    [11.80, 1.076978, 0.965028, ],
    [12.00, 1.077845, 0.964768, ],
    [12.20, 1.078661, 0.964525, ],
    [12.40, 1.079431, 0.964297, ],
    [12.60, 1.080158, 0.964083, ],
    [12.80, 1.080847, 0.963882, ],
    [13.00, 1.081499, 0.963692, ],
    [13.20, 1.082118, 0.963512, ],
    [13.40, 1.082706, 0.963342, ],
    [13.60, 1.083266, 0.963181, ],
    [13.80, 1.083799, 0.963028, ],
    [14.00, 1.084307, 0.962883, ],
    [14.20, 1.084792, 0.962745, ],
    [14.40, 1.085256, 0.962613, ],
    [14.60, 1.085699, 0.962488, ],
    [14.80, 1.086124, 0.962368, ],
    [15.00, 1.086531, 0.962254, ],
    [15.20, 1.086921, 0.962144, ],
    [15.40, 1.087296, 0.962039, ],
    [15.60, 1.087656, 0.961939, ],
    [15.80, 1.088002, 0.961842, ],
    [16.00, 1.088335, 0.961750, ],
    [18.00, 1.091085, 0.960993, ],
    [20.00, 1.093080, 0.960452, ],
    [22.00, 1.094593, 0.960047, ],
    [24.00, 1.095781, 0.959731, ],
    [26.00, 1.096737, 0.959479, ],
    [28.00, 1.097524, 0.959272, ],
    [30.00, 1.098182, 0.959100, ],
], columns=[u'Value', u'Partial', u'PartSize', ])

# ====== OFZ_SPOT ======
comb_adjusts[u'Сценарная короткая ставка (shortrate, годовое начисление)'] = pandas.DataFrame([
    [0.60, 0.169378, ],
    [0.80, 0.171012, ],
    [1.00, 0.172774, ],
    [1.20, 0.174680, ],
    [1.40, 0.176748, ],
    [1.60, 0.178999, ],
    [1.80, 0.181459, ],
    [2.00, 0.184159, ],
    [2.20, 0.187133, ],
    [2.40, 0.190427, ],
    [2.60, 0.194093, ],
    [2.80, 0.198198, ],
    [3.00, 0.202824, ],
    [3.20, 0.208073, ],
    [3.40, 0.214079, ],
    [3.60, 0.221014, ],
    [3.80, 0.229101, ],
    [4.00, 0.238643, ],
    [4.20, 0.250050, ],
    [4.40, 0.263891, ],
    [4.60, 0.280972, ],
    [4.80, 0.302449, ],
    [5.00, 0.330002, ],
    [5.20, 0.366038, ],
    [5.40, 0.413818, ],
    [5.60, 0.476974, ],
    [5.80, 0.557247, ],
    [6.00, 0.650000, ],
    [6.20, 0.742753, ],
    [6.40, 0.823026, ],
    [6.60, 0.886182, ],
    [6.80, 0.933962, ],
    [7.00, 0.969998, ],
    [7.20, 0.997551, ],
    [7.40, 1.019028, ],
    [7.60, 1.036109, ],
    [7.80, 1.049950, ],
    [8.00, 1.061357, ],
    [8.20, 1.070899, ],
    [8.40, 1.078986, ],
    [8.60, 1.085921, ],
    [8.80, 1.091927, ],
    [9.00, 1.097176, ],
    [9.20, 1.101802, ],
    [9.40, 1.105907, ],
    [9.60, 1.109573, ],
    [9.80, 1.112867, ],
    [10.00, 1.115841, ],
    [10.20, 1.118541, ],
    [10.40, 1.121001, ],
    [10.60, 1.123252, ],
    [10.80, 1.125320, ],
    [11.00, 1.127226, ],
    [11.20, 1.128988, ],
    [11.40, 1.130622, ],
    [11.60, 1.132141, ],
    [11.80, 1.133556, ],
    [12.00, 1.134879, ],
    [12.20, 1.136117, ],
    [12.40, 1.137279, ],
    [12.60, 1.138371, ],
    [12.80, 1.139400, ],
    [13.00, 1.140371, ],
    [13.20, 1.141288, ],
    [13.40, 1.142156, ],
    [13.60, 1.142979, ],
    [13.80, 1.143759, ],
    [14.00, 1.144502, ],
    [14.20, 1.145208, ],
    [14.40, 1.145881, ],
    [14.60, 1.146522, ],
    [14.80, 1.147135, ],
    [15.00, 1.147721, ],
    [15.20, 1.148281, ],
    [15.40, 1.148818, ],
    [15.60, 1.149332, ],
    [15.80, 1.149826, ],
    [16.00, 1.150300, ],
    [18.00, 1.154173, ],
    [20.00, 1.156943, ],
    [22.00, 1.159022, ],
    [24.00, 1.160640, ],
    [26.00, 1.161935, ],
    [28.00, 1.162995, ],
    [30.00, 1.163878, ],
], columns=[u'Value', u'Default', ])

# ====== SEASON ======
comb_adjusts[u'Сезонный фактор'] = pandas.DataFrame([
    [0.00, 1.000000, ],
    [1.00, 1.016611, ],
    [2.00, 0.864497, ],
    [3.00, 0.999313, ],
    [4.00, 1.046538, ],
    [5.00, 0.910677, ],
    [6.00, 0.934466, ],
    [7.00, 0.935504, ],
    [8.00, 0.940298, ],
    [9.00, 0.919531, ],
    [10.00, 1.164463, ],
    [11.00, 1.050655, ],
    [12.00, 1.177551, ],
], columns=[u'Value', u'Prepayment', ])

# ====== MIR_CIR_T ======
debug_name = u'[Сценарная ставка по ипотеке]-[Среднерыночная ставка при выдаче]+0.25'
comb_adjusts[debug_name] = pandas.DataFrame([
    [-8.00, 2.0716],
    [-7.75, 2.0684],
    [-7.50, 2.0649],
    [-7.25, 2.0610],
    [-7.00, 2.0568],
    [-6.75, 2.0522],
    [-6.50, 2.0471],
    [-6.25, 2.0414],
    [-6.00, 2.0351],
    [-5.75, 2.0280],
    [-5.50, 2.0199],
    [-5.25, 2.0107],
    [-5.00, 2.0002],
    [-4.75, 1.9879],
    [-4.50, 1.9734],
    [-4.25, 1.9561],
    [-4.00, 1.9351],
    [-3.75, 1.9091],
    [-3.50, 1.8763],
    [-3.25, 1.8335],
    [-3.00, 1.7760],
    [-2.75, 1.6957],
    [-2.50, 1.5797],
    [-2.25, 1.4121],
    [-2.00, 1.1991],
    [-1.75, 1.0136],
    [-1.50, 0.9109],
    [-1.25, 0.8628],
    [-1.00, 0.8385],
    [-0.75, 0.8248],
    [-0.50, 0.8161],
    [-0.25, 0.8103],
    [0.00, 0.8061],
    [0.25, 0.8030],
    [0.50, 0.8006],
    [0.75, 0.7987],
    [1.00, 0.7971],
    [1.25, 0.7958],
    [1.50, 0.7947],
    [1.75, 0.7938],
    [2.00, 0.7930],
    [2.25, 0.7923],
    [2.50, 0.7917],
    [2.75, 0.7911],
    [3.00, 0.7907],
    [3.25, 0.7902],
    [3.50, 0.7898],
    [3.75, 0.7895],
    [4.00, 0.7892],
    [4.25, 0.7889],
    [4.50, 0.7886],
    [4.75, 0.7883],
    [5.00, 0.7881],
    [5.25, 0.7879],
    [5.50, 0.7877],
    [5.75, 0.7875],
    [6.00, 0.7873],
], columns=[u'Value', u'Prepayment', ])
